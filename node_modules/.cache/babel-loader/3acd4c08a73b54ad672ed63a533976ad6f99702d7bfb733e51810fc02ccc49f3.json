{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import'./QuoteList.css';// Import your CSS file for styling\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const QuoteList=()=>{const[keyword,setKeyword]=useState('');const[quotes,setQuotes]=useState([]);const[newQuote,setNewQuote]=useState('');const[newRating,setNewRating]=useState(0);const[currentPage,setCurrentPage]=useState(1);const[totalPages,setTotalPages]=useState(1);useEffect(()=>{fetchQuotes();},[currentPage]);// Update quotes when page changes\nconst fetchQuotes=async()=>{try{let url=\"http://localhost:5000/api/quotes?page=\".concat(currentPage,\"&limit=9\");if(keyword){url+=\"&keyword=\".concat(keyword);}const response=await axios.get(url);setQuotes(response.data.docs);setTotalPages(response.data.totalPages);}catch(error){console.error('Error fetching quotes:',error);}};const handleNextPage=()=>{setCurrentPage(currentPage+1);};const handlePrevPage=()=>{setCurrentPage(currentPage-1);};const handleSearch=()=>{setCurrentPage(1);// Reset to first page when searching\nfetchQuotes();};const handleShowAll=()=>{if(keyword!==''){setKeyword('');}setCurrentPage(1);fetchQuotes();};const handleAddQuote=async()=>{try{await axios.post('http://localhost:5000/api/quotes',{text:newQuote,rating:newRating});setNewQuote('');setNewRating(0);fetchQuotes();}catch(error){console.error('Error adding quote:',error);}};const handleRatingChange=async(quoteId,rating)=>{try{await axios.put(\"http://localhost:5000/api/quotes/\".concat(quoteId),{rating});fetchQuotes();}catch(error){console.error('Error updating rating:',error);}};const handleDeleteQuote=async quoteId=>{try{await axios.delete(\"http://localhost:5000/api/quotes/\".concat(quoteId));setQuotes(quotes.filter(quote=>quote._id!==quoteId));// Remove deleted quote from state\n}catch(error){console.error('Error deleting quote:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"quote-list-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Quotes App\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"add-quote\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newQuote,onChange:e=>setNewQuote(e.target.value),placeholder:\"Enter new quote\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:newRating,min:\"1\",max:\"5\",onChange:e=>setNewRating(parseInt(e.target.value)),placeholder:\"Enter rating (1-5)\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btnAdd\",onClick:handleAddQuote,children:\"Add Quote\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:keyword,onChange:e=>setKeyword(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"btnSearch\",onClick:handleSearch,children:\"Search\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btnShowAll\",onClick:handleShowAll,children:\"Show All\"}),/*#__PURE__*/_jsx(\"div\",{className:\"quote-list\",children:quotes.map(quote=>/*#__PURE__*/_jsxs(\"div\",{className:\"quote-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"quote-text\",children:quote.text}),/*#__PURE__*/_jsx(\"div\",{className:\"rating\",children:[1,2,3,4,5].map(rating=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleRatingChange(quote._id,rating),className:rating<=quote.rating?'active':'',children:\"\\u2605\"},rating))}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-points\",children:[\"Total Points: \",quote.rating*10]}),/*#__PURE__*/_jsx(\"button\",{className:\"btnDelete\",onClick:()=>handleDeleteQuote(quote._id),children:\"Delete\"})]},quote._id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"pagination\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btnPrevious\",disabled:currentPage===1,onClick:handlePrevPage,children:\"Previous\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Page \",currentPage,\" of \",totalPages]}),/*#__PURE__*/_jsx(\"button\",{className:\"btnNext\",disabled:currentPage===totalPages,onClick:handleNextPage,children:\"Next\"})]})]});};export default QuoteList;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","QuoteList","keyword","setKeyword","quotes","setQuotes","newQuote","setNewQuote","newRating","setNewRating","currentPage","setCurrentPage","totalPages","setTotalPages","fetchQuotes","url","concat","response","get","data","docs","error","console","handleNextPage","handlePrevPage","handleSearch","handleShowAll","handleAddQuote","post","text","rating","handleRatingChange","quoteId","put","handleDeleteQuote","delete","filter","quote","_id","className","children","type","value","onChange","e","target","placeholder","min","max","parseInt","onClick","map","disabled"],"sources":["C:/Users/Ingda/Downloads/Project-FullStack/client/src/components/QuoteList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './QuoteList.css'; // Import your CSS file for styling\r\n\r\nconst QuoteList = () => {\r\n  const [keyword, setKeyword] = useState('');\r\n  const [quotes, setQuotes] = useState([]);\r\n  const [newQuote, setNewQuote] = useState('');\r\n  const [newRating, setNewRating] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  useEffect(() => {\r\n    fetchQuotes();\r\n  }, [currentPage]); // Update quotes when page changes\r\n\r\n  const fetchQuotes = async () => {\r\n    try {\r\n      let url = `http://localhost:5000/api/quotes?page=${currentPage}&limit=9`;\r\n      if (keyword) {\r\n        url += `&keyword=${keyword}`;\r\n      }\r\n      const response = await axios.get(url);\r\n      setQuotes(response.data.docs);\r\n      setTotalPages(response.data.totalPages);\r\n    } catch (error) {\r\n      console.error('Error fetching quotes:', error);\r\n    }\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    setCurrentPage(currentPage + 1);\r\n  };\r\n\r\n  const handlePrevPage = () => {\r\n    setCurrentPage(currentPage - 1);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    setCurrentPage(1); // Reset to first page when searching\r\n    fetchQuotes();\r\n  };\r\n\r\n  const handleShowAll = () => {\r\n    if (keyword !== '') {\r\n      setKeyword('');\r\n    }\r\n    setCurrentPage(1);\r\n    fetchQuotes();\r\n  };  \r\n\r\n  const handleAddQuote = async () => {\r\n    try {\r\n      await axios.post('http://localhost:5000/api/quotes', { text: newQuote, rating: newRating });\r\n      setNewQuote('');\r\n      setNewRating(0);\r\n      fetchQuotes();\r\n    } catch (error) {\r\n      console.error('Error adding quote:', error);\r\n    }\r\n  };\r\n\r\n  const handleRatingChange = async (quoteId, rating) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/quotes/${quoteId}`, { rating });\r\n      fetchQuotes();\r\n    } catch (error) {\r\n      console.error('Error updating rating:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteQuote = async (quoteId) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/quotes/${quoteId}`);\r\n      setQuotes(quotes.filter(quote => quote._id !== quoteId)); // Remove deleted quote from state\r\n    } catch (error) {\r\n      console.error('Error deleting quote:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"quote-list-container\">\r\n      <h1 className=\"title\">Quotes App</h1>\r\n      <div className=\"add-quote\">\r\n        <input\r\n          type=\"text\"\r\n          value={newQuote}\r\n          onChange={(e) => setNewQuote(e.target.value)}\r\n          placeholder=\"Enter new quote\"\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          value={newRating}\r\n          min=\"1\"\r\n          max=\"5\"\r\n          onChange={(e) => setNewRating(parseInt(e.target.value))}\r\n          placeholder=\"Enter rating (1-5)\"\r\n        />\r\n        <button className='btnAdd' onClick={handleAddQuote}>Add Quote</button>\r\n      </div>\r\n      <input type=\"text\" value={keyword} onChange={(e) => setKeyword(e.target.value)} />\r\n      <button className='btnSearch' onClick={handleSearch}>Search</button>\r\n      <button className='btnShowAll' onClick={handleShowAll}>Show All</button>\r\n      <div className=\"quote-list\">\r\n        {quotes.map((quote) => (\r\n          <div className=\"quote-item\" key={quote._id}>\r\n            <div className=\"quote-text\">{quote.text}</div>\r\n            <div className=\"rating\">\r\n              {[1, 2, 3, 4, 5].map((rating) => (\r\n                <button\r\n                  key={rating}\r\n                  onClick={() => handleRatingChange(quote._id, rating)}\r\n                  className={rating <= quote.rating ? 'active' : ''}\r\n                >\r\n                  &#9733;\r\n                </button>\r\n              ))}\r\n            </div>\r\n            <div className=\"total-points\">Total Points: {quote.rating * 10}</div>\r\n            <button className='btnDelete' onClick={() => handleDeleteQuote(quote._id)}>Delete</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"pagination\">\r\n        <button className='btnPrevious' disabled={currentPage === 1} onClick={handlePrevPage}>Previous</button>\r\n        <span>Page {currentPage} of {totalPages}</span>\r\n        <button className='btnNext' disabled={currentPage === totalPages} onClick={handleNextPage}>Next</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuoteList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}